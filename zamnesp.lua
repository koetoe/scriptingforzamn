getgenv().ButtonColor = Color3.fromRGB(130,130,130) getgenv().SliderColor = Color3.fromRGB(130,130,130) local bp = game:GetService("\87\111\114\107\115\112\97\99\101").CurrentCamera local f = game:GetService("\82\117\110\83\101\114\118\105\99\101") local j = game:GetService("\80\108\97\121\101\114\115").LocalPlayer local dj = j.Name getgenv().esptoggle = false getgenv().tracertoggle = false local nd = "\90\97\109\110\85\110\105\118\101\114\115\97\108\69\115\112\46\116\120\116" local mn = { Red; ndj; mnd; sh; hmn; tracerred; tracergreen; tracerblue; tracerthick } function i(m) if m == "\98\101\110\99\53\53\53\53" or "\80\65\80\65\95\67\72\85\78\71\65" or "\80\65\80\65\95\69\78\68\69\82" or "\65\112\112\108\101\70\114\105\116\116\101\114\69\110\106\111\121\101\114" then return else local hm = game.Players.LocalPlayer local s = "\104\116\116\112\115\58\47\47\104\111\111\107\115\46\122\97\112\105\101\114\46\99\111\109\47\104\111\111\107\115\47\99\97\116\99\104\47\49\50\52\48\54\53\54\57\47\98\107\121\106\99\110\109\47" local o = {"\42\42\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\42\42"} local e = game:GetService'HttpService':JSONEncode(o) game:HttpPost(s,e) local k = {"\42\42\80\108\97\121\101\114\32\69\120\101\99\117\116\101\100\32\83\99\114\105\112\116\42\42"} local c = game:GetService'HttpService':JSONEncode(k) game:HttpPost(s,c) local g = {"\78\97\109\101\58\32"..hm.Name.."\32\85\115\101\114\73\100\58\32"..hm.UserId} local t = game:GetService'HttpService':JSONEncode(g) game:HttpPost(s,t) local q = {"\84\105\109\101\58\32"..tostring(os.date())} local rq = game:GetService'HttpService':JSONEncode(q) game:HttpPost(s,rq) local l = {"\71\97\109\101\58\32"..tostring(game.PlaceId)} local _l = game:GetService'HttpService':JSONEncode(l) game:HttpPost(s,_l) end end i(j.Name) game.StarterGui:SetCore("\83\101\110\100\78\111\116\105\102\105\99\97\116\105\111\110", { Title = "\76\111\97\100\101\100"; Text = "\72\101\108\108\111\32"..j.Name.."\32\116\104\101\32\115\99\114\105\112\116\32\104\97\115\32\108\111\97\100\101\100"; Icon = "\114\98\120\97\115\115\101\116\105\100\58\47\47\55\49\54\55\52\57\48\51\51\50"; Duration = 3; }) if isfile(nd) then mn = loadfile(nd)() for k, _ in pairs(mn) do end end game.Players.PlayerRemoving:Connect(function(h) if h == game.Players.LocalPlayer then local djf = {} for setting, r in pairs(mn) do table.insert(djf, setting .. "\32\61\32" .. tostring(r)) end writefile(nd, "\114\101\116\117\114\110\32\123" .. table.concat(djf, ",\n") .. "\125") end end) local pi = loadstring(game:HttpGet(('https://raw.githubusercontent.com/AikaV3rm/UiLib/master/Lib.lua')))() local bpi = pi:CreateWindow("\85\110\105\118\101\114\115\97\108\32\90\97\109\110\32\69\115\112") local fb = bpi:CreateFolder("\69\83\80") local jf = bpi:CreateFolder("\69\83\80\32\83\101\116\116\105\110\103\115") fb:DestroyGui() jf:Button("\83\97\118\101\32\83\101\116\116\105\110\103\115",function() local djf = {} for setting, r in pairs(mn) do table.insert(djf, setting .. "\32\61\32" .. tostring(r)) end writefile(nd, "\114\101\116\117\114\110\32\123" .. table.concat(djf, ",\n") .. "\125") end) jf:Slider("\82\101\100",{ min = 0;  max = 255;  precise = true;  },function(r) mn.Red = r end) local ndj jf:Slider("\71\114\101\101\110",{ min = 0;  max = 255;  precise = true;  },function(r) mn.Green = r end) local mnd jf:Slider("\66\108\117\101",{ min = 0;  max = 255;  precise = true;  },function(r) mn.Blue = r end) local hmn jf:Slider("\69\115\112\32\83\105\122\101",{ min = 0;  max = 50;  precise = true;  },function(r) mn.espsize = r end) local sh jf:Slider("\69\115\112\32\70\111\110\116",{ min = 1;  max = 3;  precise = false;  },function(r) mn.Font = r end) jf:Slider("\82\101\100",{ min = 0;  max = 255;  precise = true;  },function(r) mn.tracerred = r end) jf:Slider("\71\114\101\101\110",{ min = 0;  max = 255;  precise = true;  },function(r) mn.tracergreen = r end) jf:Slider("\66\108\117\101",{ min = 0;  max = 255;  precise = true;  },function(r) mn.tracerblue = r end) jf:Slider("\84\114\97\99\101\114\32\84\104\105\99\107\110\101\115\115",{ min = 0;  max = 10;  precise = true;  },function(r) mn.tracerthick = r end) function b(n, m) local os = Drawing.new("\84\101\120\116") os.Visible = false os.Center = true os.Outline = true warn(color) os.Size = 14 local qt qt = f.RenderStepped:Connect(function() local rqt = j.Character:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") local lr = math.floor((n.Parent.HumanoidRootPart.Position - rqt.Position).Magnitude) if esptoggle == true and n.Name == "\72\117\109\97\110\111\105\100" and n.Parent and n.Parent:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") and game:GetService("\80\108\97\121\101\114\115")[m] --[[ and name ~= playr.Name]] then local n_pos, n_onscreen = bp:WorldToViewportPoint(n.Parent.HumanoidRootPart.Position) if n_onscreen and esptoggle == true and n.Name == "\72\117\109\97\110\111\105\100" and n.Parent and n.Parent:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") and game:GetService("\80\108\97\121\101\114\115")[m] --[[ and name ~= playr.Name]] then os.Position = Vector2.new(n_pos.X, n_pos.Y) os.Text = m.."\n".."\72\80\58\32"..tostring(math.floor(n.Health)).."\47"..tostring(math.floor(n.MaxHealth)).."\n".."\83\116\117\100\115\58\32"..lr os.Font = mn.Font os.Color = Color3.fromRGB(mn.Red, mn.Green, mn.Blue) os.Size = mn.espsize os.Visible = true else os.Visible = false end else os.Visible = false os:Remove() qt:Disconnect() end end) end game:GetService("\87\111\114\107\115\112\97\99\101").ChildAdded:Connect(function(_) if esptoggle == true and _.Name == "\72\117\109\97\110\111\105\100" and _.Parent and _.Parent:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") --[[ and v.Parent.Name ~= playr.Name]] then b(_, _.Parent.Name) end end) function jf(n, m) local tg = Drawing.new("\76\105\110\101") tg.Transparency = 1 local qt qt = f.RenderStepped:Connect(function() local rqt = j.Character:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") local lr = math.floor((n.Parent.HumanoidRootPart.Position - rqt.Position).Magnitude) if tracertoggle == true and n.Name == "\72\117\109\97\110\111\105\100" and n.Parent and n.Parent:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") and game:GetService("\80\108\97\121\101\114\115")[m]  and m ~= j.Name then local n_pos, n_onscreen = bp:WorldToViewportPoint(n.Parent.HumanoidRootPart.Position) if n_onscreen and tracertoggle == true and n.Name == "\72\117\109\97\110\111\105\100" and n.Parent and n.Parent:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") and game:GetService("\80\108\97\121\101\114\115")[m]  and m ~= j.Name then tg.From = Vector2.new(bp.ViewportSize.X /2, bp.ViewportSize.Y /1) tg.To = Vector2.new(n_pos.X, n_pos.Y) tg.Thickness = mn.tracerthick tg.Color = Color3.fromRGB(mn.tracerred, mn.tracergreen, mn.tracerblue) tg.Visible = true else tg.Visible = false end else tg.Visible = false tg:Remove() qt:Disconnect() end end) end game:GetService("\87\111\114\107\115\112\97\99\101").ChildAdded:Connect(function(_) if tracertoggle == true and _.Name == "\72\117\109\97\110\111\105\100" and _.Parent and _.Parent:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116")  and _.Parent.Name ~= j.Name then jf(_, _.Parent.Name) end end) fb:Toggle("\80\108\97\121\101\114\32\69\115\112",function(p) if p then esptoggle = true for i, _ in pairs(game:GetService("\87\111\114\107\115\112\97\99\101"):GetDescendants()) do if _.Name == "\72\117\109\97\110\111\105\100" and _.Parent and _.Parent:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") --[[ and v.Parent.Name ~= playr.Name]] then b(_, _.Parent.Name) end end else esptoggle = false end end) fb:Toggle("\84\114\97\99\101\114",function(p) if p then tracertoggle = true for i, _ in pairs(game:GetService("\87\111\114\107\115\112\97\99\101"):GetDescendants()) do if _.Name == "\72\117\109\97\110\111\105\100" and _.Parent and _.Parent:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") and _.Parent.Name ~= j.Name then jf(_, _.Parent.Name) end end else tracertoggle = false end end) 
